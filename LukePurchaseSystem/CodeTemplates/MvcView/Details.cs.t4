<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
string pkName = "PrimaryKey";
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div>
    <h4><#= ViewDataTypeShortName #></h4>
	<hr />
	<p>   
		@Html.ActionLink("Edit", "Edit", new { id = Model.GetID() }, new { @class = "btn btn-sm btn-default" }) <text>|</text>
		@Html.ActionLink("Delete", "Delete", new { id = Model.GetID() }, new { @class = "btn btn-sm btn-default" }) <text>|</text>
	</p>
	<p class="pull-right text-right">
        <a class="btn btn-sm btn-default" onclick="gotoAuditTrail()">Audit Trail</a>
    </p>
    <hr />
    <div class="list-group">
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
		if(property.PropertyName == "AuditDetail"){
			continue;
		}
		if(property.IsPrimaryKey){
			pkName = GetValueExpression(property);
		}
    if (property.Scaffold && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>

        <div class="list-group-item">
            <div class="row">
                <div class="col-sm-3"><b>@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)</b> </div>
                <div class="col-sm-1"><b>:</b></div>
                <div class="col-sm-3">@Html.DisplayFor(model => model.<#= GetValueExpression(property) #>)</div>
            </div>       
        </div>  

<#
    }
}
#>

        <div class="list-group-item">
		    <div class="row">
                <div class="col-sm-3"><b>@Html.DisplayNameFor(model => model.AuditDetail.CreatedEntryUser)</b></div>
                <div class="col-sm-1"><b>:</b></div>
                <div class="col-sm-3">@Model.AuditDetail.CreatedEntryUserDisplayName, on @Model.AuditDetail.CreatedDate.ToString("dd/MM/yyyy")</div>
            </div>  
        </div>

        @if (Model.AuditDetail.LastModifiedEntryUserID != null)
        {
            <div class="list-group-item">
                <div class="row">
                    <div class="col-sm-3"><b>@Html.DisplayNameFor(model => model.AuditDetail.LastModifiedEntryUser)</b></div>
                    <div class="col-sm-1"><b>:</b></div>
                    <div class="col-sm-3">@Model.AuditDetail.LastModifiedEntryUserDisplayName, on @(Model.AuditDetail.LastModifiedDate?.ToString("dd/MM/yyyy"))</div>
                </div>
            </div>
        }
    </div>

</div>


<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>