@model LukeApps.GeneralPurchase.Models.ExpenseClaim
@section CustomStyles {
    @Styles.Render("~/Content/bdp")
    @Styles.Render("~/Content/bootstrap-dropdown")
    @Styles.Render("~/Content/File-Upload")
}
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ExpenseClaim</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ExpenseClaimID)

        <div class="form-group">

            @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control dp" } })
                @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.OriginatorID, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.OriginatorID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OriginatorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.ReviewerID, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewerID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.ApproverID, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.ApproverID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApproverID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PaymentMethod, htmlAttributes: new { @class = "form-control chosen-select" })
                @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.SupportingDocuments, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.SupportingDocuments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupportingDocuments, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <div class="form-group collectionControl">
            <h4>@Html.LabelFor(model => model.ExpenseClaimItems, htmlAttributes: new { @class = "control-label col-md-2" })</h4>
            <div class="collectionGroup col-md-10">
                @Html.EditorFor(model => model.ExpenseClaimItems, "CollectionTemplate")
            </div>
            <div class="col-md-2">
                @Html.ValidationMessageFor(model => model.ExpenseClaimItems, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10">
                <br />
                <a class="btn btn-sm btn-default addCollectionItem" data-ajax-url="@Url.Action("AddNewExpenseClaimItem", new { id = Model.ExpenseClaimID })">
                    <span class="glyphicon glyphicon-plus"></span> Add an item
                </a>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.ExpenseClaimID })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap-dp")
    @Scripts.Render("~/bundles/bootstrap-dropdown")
    @Scripts.Render("~/bundles/collectionItems")
    @Scripts.Render("~/bundles/File-Upload")
    <script>
        $(".chosen-select").chosen({
            search_contains: true,
        })

        $('.dp').datepicker({
            format: "yyyy-mm-dd",
            endDate: "+0d",
            todayBtn: "linked",
            orientation: "bottom auto",
            daysOfWeekDisabled: "5,6"
        });

        var coll = new CollectionHandler(function (collectionGroup) {
            $.validator.unobtrusive.parseDynamicContent(collectionGroup);
            asterisk();
            $(".chosen-select").chosen({
                search_contains: true,
            });
        });

        $(function () {

            $('#SupportingDocuments').InitFileUploader();

            $('input:submit').click(function () {
                var $button = this;
                var oldValue = $button.value;
                setTimeout(function () {
                    $button.disabled = true;
                    $button.value = 'Editing...';
                    setTimeout(function () {
                        $button.disabled = false;
                        $button.value = oldValue;
                    }, 500);
                }, 0);
            });

        });
    </script>
}