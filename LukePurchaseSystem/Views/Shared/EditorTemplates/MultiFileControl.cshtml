@model LukeApps.FileHandling.MultipleFilesHandle
@{
    var htmlAttributes = ViewData["htmlAttributes"];
    IDictionary<string, object> htmlAttributesDict = new RouteValueDictionary(htmlAttributes);
    var classes = htmlAttributesDict["class"];
    var id = htmlAttributesDict["id"] ?? ViewData.TemplateInfo.HtmlFieldPrefix;
    var upload_url = htmlAttributesDict["data_upload_url"];
    var download_url = htmlAttributesDict["data_download_url"];

}

<div id="@id" data-upload-url="@upload_url" data-download-url="@download_url" data-type="multiple" class="@classes">
    <!-- The fileinput-button span is used to style the file input field as button -->
    <span class="btn btn-success fileinput-button">
        <!-- The file input field used as target for the file upload widget -->
        <input class="fileUploadInput" type="file" name="files[]" multiple>
    </span>
    @Html.HiddenFor(model => model.FileKeys, htmlAttributes: new { @class = "fileKeys" })
    @Html.HiddenFor(model => model.FileNames, htmlAttributes: new { @class = "fileNames" })

    <br>
    <br>
    <!-- The global progress bar -->
    <div id="progress" class="progress">
        <div class="progress-bar progress-bar-success"></div>
    </div>
    <!-- The container for the uploaded files -->
    <div class="filesDisplay list-group"></div>
</div>