 @model LukeApps.GeneralPurchase.Models.PurchaseOrder

@section CustomStyles {
    @Styles.Render("~/Content/bdp")
    @Styles.Render("~/Content/bootstrap-dropdown")
}
@{
    ViewBag.Title = "Close Out";
}

<h2>Close Out Purchase Order</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h2>Offer by @Html.DisplayFor(model => model.Company.CompanyName) in Enquiry @Html.DisplayFor(model => model.Offer.Enquiry.EnquiryNumber)</h2>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PurchaseOrderID)

    <div class="form-group">
        <label class="control-label col-md-2">Agreement Value</label>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Total)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsPurchaseOrderCancelled, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsPurchaseOrderCancelled)
                @Html.ValidationMessageFor(model => model.IsPurchaseOrderCancelled, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsPurchaseOrderClosed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsPurchaseOrderClosed)
                @Html.ValidationMessageFor(model => model.IsPurchaseOrderClosed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Close Purchase Order" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.PurchaseOrderID })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>



        $(function () {

            $('input:submit').click(function () {
                var $button = this;
                var oldValue = $button.value;
                setTimeout(function () {
                    $button.disabled = true;
                    $button.value = 'Closing...';
                    setTimeout(function () {
                        $button.disabled = false;
                        $button.value = oldValue;
                    }, 500);
                }, 0);
            });

        });
    </script>
}